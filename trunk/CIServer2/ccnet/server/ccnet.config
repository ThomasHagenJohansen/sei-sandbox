<cruisecontrol xmlns:cb="urn:ccnet.config.builder">

	<cb:define svn_server = "http://seiudvikling.sst.dk" />
	<cb:define localpathAbs = "C:\SST\svn\trunk\Sandbox\CIServer2" />
	<cb:define ccnetServerPathAbs = "$(localpathAbs)\ccnet\server" />
	<cb:define svnLocalPathAbs = "C:\SST\svn" />
	<cb:define antPathRel = "3rdparty\original\apache\ant\1.7.1\bin\bin\ant.bat" />
	<cb:define svnPathRel = "3rdparty\original\tigris.org\svn\win32-1.6.2\bin\svn.exe" />
	<cb:define branchesPathRel = "branches" />
	<cb:define requiredAntJavaVersion = "1.6" />
	
	<cb:define javaComponentsPathRel = "JavaComponents" />
	<cb:define backendPathRel = "Backend" />
	
	<cb:scope branch = "2.0.1.x.win">

		<queue name="BackendQueue_$(branch)" duplicates="ApplyForceBuildsReAdd"/>
		
<!-- 		<project name="Backend_SST_Installer_branch_$(branch)_ALL" queue="BackendQueue_$(branch)" queuePriority="1" >
		</project>
 -->		
 
		<cb:scope source="1.6">
		
			<cb:scope target="1.6">

				<cb:scope project.name = "EIBackend_$(branch)" >
					<project name="$(project.name)" queue="BackendQueue_$(branch)" queuePriority="4">
					
						<cb:define project.workingDirectory = "$(ccnetServerPathAbs)\$(project.name)\W" /> 
						<cb:define project.artifactDirectory = "$(ccnetServerPathAbs)\$(project.name)\A" /> 
						<cb:define build.xml.dir = "$(project.workingDirectory)\$(branchesPathRel)\$(branch)\Backend\SST\Installer" /> 
						<cb:define server.install.test.dir = "$(build.xml.dir)\InstallTest" /> 
						<workingDirectory>$(project.workingDirectory)</workingDirectory>
						<artifactDirectory>$(project.artifactDirectory)</artifactDirectory>
						
						<sourcecontrol type="multi">
						  <sourceControls>
							<svn>
								<executable>$(localpathAbs)\$(svnPathRel)</executable>
								<trunkUrl>$(svn_server)/Backend/$(branchesPathRel)/$(branch)</trunkUrl>
								<workingDirectory>$(project.workingDirectory)\$(branchesPathRel)\$(branch)\Backend</workingDirectory>
							</svn>
							<svn>
								<executable>$(localpathAbs)\$(svnPathRel)</executable>
								<trunkUrl>$(svn_server)/JavaComponents/$(branchesPathRel)/$(branch)</trunkUrl>
								<workingDirectory>$(project.workingDirectory)\$(branchesPathRel)\$(branch)\JavaComponents</workingDirectory>
							</svn>
						  </sourceControls>
						</sourcecontrol>

						<triggers>
							<intervalTrigger seconds="120" buildCondition="IfModificationExists" initialSeconds="60"/>
<!-- 							<projectTrigger project="Backend_SST_Installer_branch_$(branch)_ALL" >
								<innerTrigger type="intervalTrigger" seconds="60" buildCondition="ForceBuild" initialSeconds="30"/>
							</projectTrigger>
 -->						</triggers>
						
						<!-- <prebuild> Kro: uncommented, since now test reports are deleted by ant task
							<exec>
								<baseDirectory> $(project.workingDirectory)</baseDirectory>
								<executable>cmd</executable>
								<buildArgs>/C del /Q Test-*.xml</buildArgs>
								<buildTimeoutSeconds>5</buildTimeoutSeconds>
							</exec>
						</prebuild> -->
						
						<tasks>
							<exec>
								<baseDirectory>$(build.xml.dir)</baseDirectory>
								<executable>build.xml.bat</executable>
								<buildArgs>-logger org.apache.tools.ant.XmlLogger -verbose -debug -logfile $(project.workingDirectory)\build.xml.log -Dverbose="yes" -Ddeprecation="on" -Dsource=$(source) -Dtarget=$(target) -DrequiredAntJavaVersion=$(requiredAntJavaVersion) -f build.xml cleanall,install-unittest,install-jdepend</buildArgs>
								<buildTimeoutSeconds>360</buildTimeoutSeconds>
							</exec>
						</tasks>
						
						<publishers>
							<merge>
								<files>
									<file>$(project.workingDirectory)\build.xml.log</file>
									<file>$(server.install.test.dir)\Output\Test\Unit\TEST-*.xml</file>
								</files>
							</merge>		
							<xmllogger />
							<modificationHistory />					
							<statistics />					
							<rss/>
 							<buildpublisher>
								<sourceDir>$(server.install.test.dir)\Output</sourceDir>
								<publishDir>$(project.artifactDirectory)\Output</publishDir>
								<useLabelSubDirectory>true</useLabelSubDirectory>
								<alwaysPublish>true</alwaysPublish>
							</buildpublisher>						
						</publishers>
						<externalLinks>
							<externalLink name="Artifacts" url="../../../../../ccnetdata/$(project.name)/A/" />
						</externalLinks>
						
					</project>	
				</cb:scope>
				
			</cb:scope> <!-- target-->
	
		</cb:scope> <!-- source-->

		
	</cb:scope> <!-- branch-->
		
		
	<cb:scope project.name = "CIServer2_trunk" >
		<project name="$(project.name)">
			<cb:define project.workingDirectory = "$(localpathAbs)" /> 
			<cb:define project.artifactDirectory = "$(ccnetServerPathAbs)\$(project.name)\A" /> 
			<!-- <cb:define build.xml.dir = "$(project.workingDirectory)\$(branchesPathRel)\$(branch)\Backend\SST\Installer" />  -->
			<workingDirectory>$(project.workingDirectory)</workingDirectory>
			<artifactDirectory>$(project.artifactDirectory)</artifactDirectory>
			<triggers>
				<intervalTrigger seconds="120" />
			</triggers>
			<sourcecontrol type="svn">
				<executable>$(localpathAbs)\$(svnPathRel)</executable>
				<trunkUrl>$(svn_server)/Sandbox/trunk/CIServer2</trunkUrl>
				<workingDirectory>$(project.workingDirectory)</workingDirectory>
			</sourcecontrol>
			<publishers>
				<xmllogger />
				<modificationHistory />					
				<statistics />					
				<rss/>
			</publishers>			
			<externalLinks>
				<externalLink name="Artifacts" url="../../../../../ccnetdata/$(project.name)/A/" />
			</externalLinks>
		</project>
	</cb:scope>
	

</cruisecontrol>